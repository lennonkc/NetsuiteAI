很棒, 你做的很好,请帮我写一个新的js文件,fullSourceing.js. 我现在有两个json文件, 第一个json文件中的data数组元素中的"ID"指的就是第二个JSON文件中的"entityid".
请帮我遍历第一个数组文件中的data数组, 并且为每个数组元素根据"ID"检索"entityid", 然后为这个元素增加一个"term_name", 如果无法找到对应的"term_name", 则应该将"term_name"设置为空"".
最后将处理后的数据保存到一个新的json文件中, 文件名为 fullSources.json

Record03_05_20_04.json 文件数据示例
{
    "success": true,
    "totalRecords": 3281,
    "data": [
        {
            "As Of Date": "3/4/2025 10:46 pm",
            "Coordinator": "Shivangi Pradhan",
            "Brand": "",
            "Whse Internal ID": "1234",
            "Warehouse": "Carrier to NA [Virtual]",
            "Seller Account": "ChomChom US",
            "Amazon Store Name": "ChomChom_US",
            "Supplier": "Nippon Seal",
            "Status": "Pending Supervisor Approval",
            "PO #": "PO66707",
            "Memo": "",
            "Date Entered": "3/4/2025 7:58 am",
            "ESTIMATED READY DATE": "",
            "PO Line No.": "0",
            "ASIN": "",
            "SKU": "",
            "Assembly SKU": "",
            "Description": "",
            "Quantity": "",
            "Cost in USD": "",
            "Cost in PO Currency": "",
            "Currency": "USD",
            "Estimated Ready Date / ERD": "",
            "Early Pickup date": "",
            "Late Pickup Date": "",
            "Earliest Delivery Date": "",
            "LATEST DELIVERY DATE": "",
            "Quantity Received": "0",
            "Quantity on Inbound Shipments": "",
            "Supplier Shipping Country Code": "CN",
            "Supplier Billing Country Code": "CN",
            "Supplier Ship From Country Code (From PO)": "CN",
            "Closed": false,
            "Custom Form": "Thrasio SC Purchase Order",
            "XPO Integration Status": "",
            "Outbound Doc Sent to XPO Connect": "",
            "Send to XPO Connect": false,
            "ID": "N-CN-00071",
            "Destination Type": "",
            "INCOTERM": "",
            "ARN#": "",
            "FBA Shipment ID#": "",
            "3PL FCID#": ""
        },
        {
            "As Of Date": "3/4/2025 10:46 pm",
            "Coordinator": "Shivangi Pradhan",
            "Brand": "ChomChom Roller",
            "Whse Internal ID": "1234",
            "Warehouse": "Carrier to NA [Virtual]",
            "Seller Account": "ChomChom US",
            "Amazon Store Name": "ChomChom_US",
            "Supplier": "Nippon Seal",
            "Status": "Pending Supervisor Approval",
            "PO #": "PO66707",
            "Memo": "",
            "Date Entered": "3/4/2025 7:58 am",
            "ESTIMATED READY DATE": "",
            "PO Line No.": "1",
            "ASIN": "B0C2FMZMHP",
            "SKU": "CCR-PET-ROLVR-BLK",
            "Assembly SKU": "",
            "Description": "ChomChom Roller - Black - Variation",
            "Quantity": "40176",
            "Cost in USD": "3.763",
            "Cost in PO Currency": "3.763",
            "Currency": "USD",
            "Estimated Ready Date / ERD": "5/5/2025",
            "Early Pickup date": "5/6/2025",
            "Late Pickup Date": "5/13/2025",
            "Earliest Delivery Date": "5/14/2025",
            "LATEST DELIVERY DATE": "7/14/2025",
            "Quantity Received": "0",
            "Quantity on Inbound Shipments": "",
            "Supplier Shipping Country Code": "CN",
            "Supplier Billing Country Code": "CN",
            "Supplier Ship From Country Code (From PO)": "CN",
            "Closed": false,
            "Custom Form": "Thrasio SC Purchase Order",
            "XPO Integration Status": "",
            "Outbound Doc Sent to XPO Connect": "",
            "Send to XPO Connect": false,
            "ID": "N-CN-00071",
            "Destination Type": "",
            "INCOTERM": "FOB",
            "ARN#": "",
            "FBA Shipment ID#": "",
            "3PL FCID#": ""
        }
    ]
}

VendorID_03_05_20_53.json 文件数据示例
{
    "links": [
      {
        "rel": "self",
        "href": "https://5377549-sb2.suitetalk.api.netsuite.com/services/rest/query/v1/suiteql"
      }
    ],
    "count": 122,
    "hasMore": false,
    "items": [
        {
            "links": [],
            "companyname": "Boston Bean Coffee Company",
            "entityid": "50",
            "id": "1541"
          },
          {
            "links": [],
            "companyname": "TLC Janitorial",
            "entityid": "333",
            "id": "1824",
            "term_name": "Net 10",
            "terms": "23"
          },
          {
            "links": [],
            "companyname": "Advanced Science Laboratories, Inc.",
            "entityid": "48821",
            "id": "55388"
          }
       ],
    "offset": 0,
    "totalResults": 122
  }




我希望在原有逻辑上, 继续优化fullSources.json的数据内容.
我现在有一个paid_Feb25.csv文件, 这个文件记录了所有"PO #"的值的paid情况
我希望在原fullSources.json的数据源准备完成后还没写入真正写入之前, 继续优化数据源,
再次遍历数据源, 遍历所有的元素的"PO #"
当存在"PO Line No.": "0" 时, 对同个"PO #"的不同"PO Line No."进行以下操作

将"PO Line No.": "1" 的除了"PO Line No.", ”Quantity", ”Cost in USD"的其他keys的value设置到"PO Line No.": "0"的这个元素中,  
字符串拼接同个PO的不同PO Line的"“"PO Line No." 到"PO Line No.": "0"的这个元素
字符串拼接同个PO的不同PO Line的”Quantity"到"PO Line No.": "0"的这个元素, 
字符串拼接同个PO的不同PO Line的”和”Cost in USD"到"PO Line No.": "0"的这个元素
为"PO Line No.": "0"的这个元素添加一个 "Balance“ 字段, 这个字段的值是同个PO的不同PO Line的"Quantity“*”Cost in USD"的结果的累加. 
删掉同PO号码的其他元素,只保留"PO Line No.": "0" 这个元素, 并根据这个元素的"PO #"去检索paid_Feb25.csv的"PO“列, 为"PO Line No.": "0"这个元素添加一个"paid“字段, 这个字段的值是检索的到的 paid_Feb25.csv文件的"Debit Amount“, 如果 paid_Feb25.csv中没有"PO“等于"PO Line No.": "0"的"PO #", 则将"paid“字段设置成 0.

最后, 去掉fullSources.json数据源中的"success"字段和"totalRecords"字段,
我需要新的字段,"Removals Dulplicate Line", 这个字段的值是删除的元素的数量. "POs Amounts", 这个字段的值是data数组的长度.
"Empty Wow_Payment_Terms", 这个字段的值是"Wow_Payment_Terms"为空的元素的数量.
"payment term conflict", 这个字段的值是"term_name" 和"Wow_Payment_Terms" 不相同的元素的数量.

目前的fullSources.json 数据示例
  {
    "success": true,
    "totalRecords": 3281,
    "data": [
      {
        "As Of Date": "3/5/2025 4:04 am",
        "Coordinator": "Shivangi Pradhan",
        "Brand": "",
        "Whse Internal ID": "1234",
        "Warehouse": "Carrier to NA [Virtual]",
        "Seller Account": "ChomChom US",
        "Amazon Store Name": "ChomChom_US",
        "Supplier": "Nippon Seal",
        "Status": "Pending Supervisor Approval",
        "PO #": "PO66707",
        "Memo": "",
        "Date Entered": "3/4/2025 7:58 am",
        "ESTIMATED READY DATE": "",
        "PO Line No.": "0",
        "ASIN": "",
        "SKU": "",
        "Assembly SKU": "",
        "Description": "",
        "Quantity": "",
        "Cost in USD": "",
        "Cost in PO Currency": "",
        "Currency": "USD",
        "Estimated Ready Date / ERD": "",
        "Early Pickup date": "",
        "Late Pickup Date": "",
        "Earliest Delivery Date": "",
        "LATEST DELIVERY DATE": "",
        "Quantity Received": "0",
        "Quantity on Inbound Shipments": "",
        "Supplier Shipping Country Code": "CN",
        "Supplier Billing Country Code": "CN",
        "Supplier Ship From Country Code (From PO)": "CN",
        "Closed": false,
        "Custom Form": "Thrasio SC Purchase Order",
        "XPO Integration Status": "",
        "Outbound Doc Sent to XPO Connect": "",
        "Send to XPO Connect": false,
        "ID": "N-CN-00071",
        "Destination Type": "",
        "INCOTERM": "",
        "ARN#": "",
        "FBA Shipment ID#": "",
        "3PL FCID#": "",
        "term_name": "Net 60",
        "Wow_Payment_Terms": "Net 60",
        "Deposit_Required": "0%",
        "Prepay_G": "0%",
        "Prepay_H": "0%",
        "Net_Days": "60"
      },
      {
        "As Of Date": "3/5/2025 4:04 am",
        "Coordinator": "Shivangi Pradhan",
        "Brand": "ChomChom Roller",
        "Whse Internal ID": "1234",
        "Warehouse": "Carrier to NA [Virtual]",
        "Seller Account": "ChomChom US",
        "Amazon Store Name": "ChomChom_US",
        "Supplier": "Nippon Seal",
        "Status": "Pending Supervisor Approval",
        "PO #": "PO66707",
        "Memo": "",
        "Date Entered": "3/4/2025 7:58 am",
        "ESTIMATED READY DATE": "",
        "PO Line No.": "1",
        "ASIN": "B0C2FMZMHP",
        "SKU": "CCR-PET-ROLVR-BLK",
        "Assembly SKU": "",
        "Description": "ChomChom Roller - Black - Variation",
        "Quantity": "40176",
        "Cost in USD": "3.763",
        "Cost in PO Currency": "3.763",
        "Currency": "USD",
        "Estimated Ready Date / ERD": "5/5/2025",
        "Early Pickup date": "5/6/2025",
        "Late Pickup Date": "5/13/2025",
        "Earliest Delivery Date": "5/14/2025",
        "LATEST DELIVERY DATE": "7/14/2025",
        "Quantity Received": "0",
        "Quantity on Inbound Shipments": "",
        "Supplier Shipping Country Code": "CN",
        "Supplier Billing Country Code": "CN",
        "Supplier Ship From Country Code (From PO)": "CN",
        "Closed": false,
        "Custom Form": "Thrasio SC Purchase Order",
        "XPO Integration Status": "",
        "Outbound Doc Sent to XPO Connect": "",
        "Send to XPO Connect": false,
        "ID": "N-CN-00071",
        "Destination Type": "",
        "INCOTERM": "FOB",
        "ARN#": "",
        "FBA Shipment ID#": "",
        "3PL FCID#": "",
        "term_name": "Net 60",
        "Wow_Payment_Terms": "Net 60",
        "Deposit_Required": "0%",
        "Prepay_G": "0%",
        "Prepay_H": "0%",
        "Net_Days": "60"
      },
    ]
    }

paid_Feb25.csv 数据示例
PO,Debit Amount,Count
PO100,22409.175,1
PO10021,16228.8,1
PO10022,4909.75,1
PO10026,9234,1
PO10031,13760.262,1
PO10035,11868,1
PO10036,10458,1
PO10037,63439.6,1
PO10038,64164.24,1
PO10039,64164.24,1
PO10041,6225.6,1
PO10042,9887.4,1
PO10043,195948.5,1
PO10044,9101,1
PO10045,1197.5,1
PO10046,20520.96,1
PO10047,398000,1
PO10048,63291,1
PO10049,7222.5,1
PO10050,1798.038,1
PO10051,4283.072,1
PO10052,2940,1
PO10053,3840,1
PO10054,4320,1
PO10059,5304,1



很棒, 在输出文件之前, 我还需要再遍历一遍所有data数组的元素, 需要为每个元素生成和添加以下字段
“Unpaid“ :“Balance” - “paid”
"Deposit":{
    Deposit Date : "Date Entered“+14天 的日期, 格式 month/day/year 如 "5/20/2025“
    Deposit % Due : “Deposit_Required“
    Deposit anchor:  "Deposit Date“ < 现在时间月份 ? “Past Due” : "<Current Month name, like Mar., Feb. Jan.)>” 
    Deposit $ Due:  "Paid" > 0 ? 0 : <“Deposit % Due“ * “Balance”>
}
"Prepay":{
  Prepay Date : "Estimated Ready Date / ERD“
  Prepay % Due: “Prepay_H“
  Prepay anchor: "Prepay Date“ < 现在时间月份 ? “Past Due” : "<Current Month name, like Mar., Feb. Jan.)>” 
  Prepay $ Due: “Paid” ≤ 0 ? 0 : <“Prepay % Due“ * "Unpaid">
}
"Unpaid":{
  Unpaid Date: “Estimated Ready Date / ERD“ + “Net_Days“
  Unpaid % Due: 1 - “Deposit % Due” - “Prepay % Due“ (注意处理格式,“Prepay % Due“是字符串类型的百分比, 最终的结果应该也是字符串百分比)
  Unpaid anchor: "Unpaid Date“ < 现在时间月份 ? “Past Due” : "<Current Month name, like Mar., Feb. Jan.)>” 
  Unpaid $ Due: “Paid” ≤ 0 ? 0 : <Math.min(“unpaid % Due“ * “Balance”,"Unpaid“ )> 
}



maindata 示例响应
{
  "data": [
    {
      "As Of Date": "3/5/2025 4:04 am",
      "Coordinator": "Shivangi Pradhan",
      "Brand": "ChomChom Roller",
      "Whse Internal ID": "1234",
      "Warehouse": "Carrier to NA [Virtual]",
      "Seller Account": "ChomChom US",
      "Amazon Store Name": "ChomChom_US",
      "Supplier": "Nippon Seal",
      "Status": "Pending Supervisor Approval",
      "PO #": "PO66707",
      "Memo": "",
      "Date Entered": "3/4/2025 7:58 am",
      "ESTIMATED READY DATE": "",
      "PO Line No.": "0,1",
      "ASIN": "B0C2FMZMHP",
      "SKU": "CCR-PET-ROLVR-BLK",
      "Assembly SKU": "",
      "Description": "ChomChom Roller - Black - Variation",
      "Quantity": "40176",
      "Cost in USD": "3.763",
      "Cost in PO Currency": "3.763",
      "Currency": "USD",
      "Estimated Ready Date / ERD": "5/5/2025",
      "Early Pickup date": "5/6/2025",
      "Late Pickup Date": "5/13/2025",
      "Earliest Delivery Date": "5/14/2025",
      "LATEST DELIVERY DATE": "7/14/2025",
      "Quantity Received": "0",
      "Quantity on Inbound Shipments": "",
      "Supplier Shipping Country Code": "CN",
      "Supplier Billing Country Code": "CN",
      "Supplier Ship From Country Code (From PO)": "CN",
      "Closed": false,
      "Custom Form": "Thrasio SC Purchase Order",
      "XPO Integration Status": "",
      "Outbound Doc Sent to XPO Connect": "",
      "Send to XPO Connect": false,
      "ID": "N-CN-00071",
      "Destination Type": "",
      "INCOTERM": "FOB",
      "ARN#": "",
      "FBA Shipment ID#": "",
      "3PL FCID#": "",
      "term_name": "Net 60",
      "Wow_Payment_Terms": "Net 60",
      "Deposit_Required": "0%",
      "Prepay_G": "0%",
      "Prepay_H": "0%",
      "Net_Days": "60",
      "Balance": "151182.29",
      "paid": 0,
      "Unpaid": {
        "value": 151182.29,
        "Unpaid Date": "7/4/2025",
        "Unpaid % Due": "100%",
        "Unpaid anchor": "Jul",
        "Unpaid $ Due": 0
      },
      "Deposit": {
        "Deposit Date": "3/18/2025",
        "Deposit % Due": "0%",
        "Deposit anchor": "Mar",
        "Deposit $ Due": 0
      },
      "Prepay": {
        "Prepay Date": "5/5/2025",
        "Prepay % Due": "0%",
        "Prepay anchor": "May",
        "Prepay $ Due": 0
      }
    },
    {
      "As Of Date": "3/5/2025 4:04 am",
      "Coordinator": "Shivangi Pradhan",
      "Brand": "ChomChom Roller",
      "Whse Internal ID": "1234",
      "Warehouse": "Carrier to NA [Virtual]",
      "Seller Account": "ChomChom US",
      "Amazon Store Name": "ChomChom_US",
      "Supplier": "Nippon Seal",
      "Status": "Pending Supervisor Approval",
      "PO #": "PO66706",
      "Memo": "",
      "Date Entered": "3/4/2025 7:19 am",
      "ESTIMATED READY DATE": "",
      "PO Line No.": "0,1",
      "ASIN": "B0C2FMZMHP",
      "SKU": "CCR-PET-ROLVR-BLK",
      "Assembly SKU": "",
      "Description": "ChomChom Roller - Black - Variation",
      "Quantity": "40176",
      "Cost in USD": "3.763",
      "Cost in PO Currency": "3.763",
      "Currency": "USD",
      "Estimated Ready Date / ERD": "5/5/2025",
      "Early Pickup date": "5/6/2025",
      "Late Pickup Date": "5/13/2025",
      "Earliest Delivery Date": "5/14/2025",
      "LATEST DELIVERY DATE": "7/14/2025",
      "Quantity Received": "0",
      "Quantity on Inbound Shipments": "",
      "Supplier Shipping Country Code": "CN",
      "Supplier Billing Country Code": "CN",
      "Supplier Ship From Country Code (From PO)": "CN",
      "Closed": false,
      "Custom Form": "Thrasio SC Purchase Order",
      "XPO Integration Status": "",
      "Outbound Doc Sent to XPO Connect": "",
      "Send to XPO Connect": false,
      "ID": "N-CN-00071",
      "Destination Type": "",
      "INCOTERM": "FOB",
      "ARN#": "",
      "FBA Shipment ID#": "",
      "3PL FCID#": "",
      "term_name": "Net 60",
      "Wow_Payment_Terms": "Net 60",
      "Deposit_Required": "0%",
      "Prepay_G": "0%",
      "Prepay_H": "0%",
      "Net_Days": "60",
      "Balance": "151182.29",
      "paid": 0,
      "Unpaid": {
        "value": 151182.29,
        "Unpaid Date": "7/4/2025",
        "Unpaid % Due": "100%",
        "Unpaid anchor": "Jul",
        "Unpaid $ Due": 0
      },
      "Deposit": {
        "Deposit Date": "3/18/2025",
        "Deposit % Due": "0%",
        "Deposit anchor": "Mar",
        "Deposit $ Due": 0
      },
      "Prepay": {
        "Prepay Date": "5/5/2025",
        "Prepay % Due": "0%",
        "Prepay anchor": "May",
        "Prepay $ Due": 0
      }
    }, ],
  "Removals Dulplicate Line": 2652,
  "POs Amounts": 629,
  "Empty Wow_Payment_Terms": 93,
  "payment term conflict": 365
}


请帮我写一个js程序,可以根据maindata对象的数据, 生成表格样式的html代码字符串,我需要利用这个字符串在别的地方渲染html文件, 具体要求如下.
我的目的是统计以Supplier名为主键, 获取和累加所有数组元素内部"$ Due"值, 比如"<Unpaid or Deposit or Deposit> $ Due"
表格生成逻辑如下, 遍历data里面的所有元素, 根据"Supplier"生成行名, 根据下面的逻辑匹配列名
遍历该元素的"Unpaid" "Deposit" "Prepay"对象, 根据这个对象内部的anchor值, 也就是<Unpaid or Deposit or Deposit>中的"<Unpaid or Deposit or Deposit> anchor"的值匹配列名, 如
案例 1:"Unpaid": {
        "value": 151182.29,
        "Unpaid Date": "7/4/2025",
        "Unpaid % Due": "100%",
        "Unpaid anchor": "Jul",
        "Unpaid $ Due": 0
      },
应该匹配列名"2025_Jul - Unpaid"
匹配成功后, 将这个"Supplier"行"2025_Jul - Unpaid"列的cell值设置为"Unpaid $ Due"的值

案例 2:
      "Deposit": {
        "Deposit Date": "3/18/2025",
        "Deposit % Due": "0%",
        "Deposit anchor": "Mar",
        "Deposit $ Due": 0
      },
应该匹配列名"2025_Mar - Deposit"
匹配成功后, 将这个"Supplier"行"2025_Mar - Deposit"列的cell值设置为"Deposit $ Due"的值


行名 : "Supplier"的值
列数 = 4 + Remainingmonths*4,
列名参考案例:
"<Past Due - Deposit>","<Past Due - Prepay>","<Past Due - Unpaid>","<Past Due - Total>","<2025_Current month, example 2025_Mar>- Deposit" "<Current month> - Prepay" "<Current month>- Unpaid" "<Current month> - Total","<Current month + 1Month, example 2025_Apr> - Deposit" "<Current month + 1Month> - Prepay" "<Current month + 1Month>  - unpaid" "<Current month + 1Month> - Total","<Current month + 2Month, example 2025_Apr> - Deposit" "<Current month + 2Month> - Prepay" "<Current month + 1Month>  - unpaid" "<Current month + 2Month> - Total", ... "<Last month of this year, example 2025_Dec> - Deposit" "<Last month of this year> - Prepay" "<Last month of this year>  - unpaid" "<Last month of this year> - Total" 



注意可能有多个data元都是同一个"Supplier",此时应该叠加对应行列的cell值


Maindata对象数据案例如下
{
  "data": [
    {
      "As Of Date": "3/5/2025 4:04 am",
      "Coordinator": "Shivangi Pradhan",
      "Brand": "ChomChom Roller",
      "Whse Internal ID": "1234",
      "Warehouse": "Carrier to NA [Virtual]",
      "Seller Account": "ChomChom US",
      "Amazon Store Name": "ChomChom_US",
      "Supplier": "Nippon Seal",
      "Status": "Pending Supervisor Approval",
      "PO #": "PO66707",
      "Memo": "",
      "Date Entered": "3/4/2025 7:58 am",
      "ESTIMATED READY DATE": "",
      "PO Line No.": "0,1",
      "ASIN": "B0C2FMZMHP",
      "SKU": "CCR-PET-ROLVR-BLK",
      "Assembly SKU": "",
      "Description": "ChomChom Roller - Black - Variation",
      "Quantity": "40176",
      "Cost in USD": "3.763",
      "Cost in PO Currency": "3.763",
      "Currency": "USD",
      "Estimated Ready Date / ERD": "5/5/2025",
      "Early Pickup date": "5/6/2025",
      "Late Pickup Date": "5/13/2025",
      "Earliest Delivery Date": "5/14/2025",
      "LATEST DELIVERY DATE": "7/14/2025",
      "Quantity Received": "0",
      "Quantity on Inbound Shipments": "",
      "Supplier Shipping Country Code": "CN",
      "Supplier Billing Country Code": "CN",
      "Supplier Ship From Country Code (From PO)": "CN",
      "Closed": false,
      "Custom Form": "Thrasio SC Purchase Order",
      "XPO Integration Status": "",
      "Outbound Doc Sent to XPO Connect": "",
      "Send to XPO Connect": false,
      "ID": "N-CN-00071",
      "Destination Type": "",
      "INCOTERM": "FOB",
      "ARN#": "",
      "FBA Shipment ID#": "",
      "3PL FCID#": "",
      "term_name": "Net 60",
      "Wow_Payment_Terms": "Net 60",
      "Deposit_Required": "0%",
      "Prepay_G": "0%",
      "Prepay_H": "0%",
      "Net_Days": "60",
      "Balance": "151182.29",
      "paid": 0,
      "Unpaid": {
        "value": 151182.29,
        "Unpaid Date": "7/4/2025",
        "Unpaid % Due": "100%",
        "Unpaid anchor": "Jul",
        "Unpaid $ Due": 0
      },
      "Deposit": {
        "Deposit Date": "3/18/2025",
        "Deposit % Due": "0%",
        "Deposit anchor": "Mar",
        "Deposit $ Due": 0
      },
      "Prepay": {
        "Prepay Date": "5/5/2025",
        "Prepay % Due": "0%",
        "Prepay anchor": "May",
        "Prepay $ Due": 0
      }
    },
    {
      "As Of Date": "3/5/2025 4:04 am",
      "Coordinator": "Shivangi Pradhan",
      "Brand": "ChomChom Roller",
      "Whse Internal ID": "1234",
      "Warehouse": "Carrier to NA [Virtual]",
      "Seller Account": "ChomChom US",
      "Amazon Store Name": "ChomChom_US",
      "Supplier": "Nippon Seal",
      "Status": "Pending Supervisor Approval",
      "PO #": "PO66706",
      "Memo": "",
      "Date Entered": "3/4/2025 7:19 am",
      "ESTIMATED READY DATE": "",
      "PO Line No.": "0,1",
      "ASIN": "B0C2FMZMHP",
      "SKU": "CCR-PET-ROLVR-BLK",
      "Assembly SKU": "",
      "Description": "ChomChom Roller - Black - Variation",
      "Quantity": "40176",
      "Cost in USD": "3.763",
      "Cost in PO Currency": "3.763",
      "Currency": "USD",
      "Estimated Ready Date / ERD": "5/5/2025",
      "Early Pickup date": "5/6/2025",
      "Late Pickup Date": "5/13/2025",
      "Earliest Delivery Date": "5/14/2025",
      "LATEST DELIVERY DATE": "7/14/2025",
      "Quantity Received": "0",
      "Quantity on Inbound Shipments": "",
      "Supplier Shipping Country Code": "CN",
      "Supplier Billing Country Code": "CN",
      "Supplier Ship From Country Code (From PO)": "CN",
      "Closed": false,
      "Custom Form": "Thrasio SC Purchase Order",
      "XPO Integration Status": "",
      "Outbound Doc Sent to XPO Connect": "",
      "Send to XPO Connect": false,
      "ID": "N-CN-00071",
      "Destination Type": "",
      "INCOTERM": "FOB",
      "ARN#": "",
      "FBA Shipment ID#": "",
      "3PL FCID#": "",
      "term_name": "Net 60",
      "Wow_Payment_Terms": "Net 60",
      "Deposit_Required": "0%",
      "Prepay_G": "0%",
      "Prepay_H": "0%",
      "Net_Days": "60",
      "Balance": "151182.29",
      "paid": 0,
      "Unpaid": {
        "value": 151182.29,
        "Unpaid Date": "7/4/2025",
        "Unpaid % Due": "100%",
        "Unpaid anchor": "Jul",
        "Unpaid $ Due": 0
      },
      "Deposit": {
        "Deposit Date": "3/18/2025",
        "Deposit % Due": "0%",
        "Deposit anchor": "Mar",
        "Deposit $ Due": 0
      },
      "Prepay": {
        "Prepay Date": "5/5/2025",
        "Prepay % Due": "0%",
        "Prepay anchor": "May",
        "Prepay $ Due": 0
      }
    }, ],
  "Removals Dulplicate Line": 2652,
  "POs Amounts": 629,
  "Empty Wow_Payment_Terms": 93,
  "payment term conflict": 365
}

特别提醒,第一列的宽度应该大一些,当整个页面的宽度不够时, 第一列的宽度也要固定不变,不能被挤压
样式可以参考下面的代码

    <style>
      /* 表格基础样式 */
      table {
        width: 100%;
        border-collapse: collapse;
        font-family: Arial, sans-serif;
      }

      /* 表头背景色为蓝色，文字为白色 */
      thead tr {
        background-color: #007bff;
        color: #fff;
        text-align: left;
      }

      /* 给表格加边框，增大列宽 */
      th, td {
        border: 1px solid #ccc;
        padding: 8px;
      }

      /* 增加第一列宽度 */
      th:first-child, td:first-child, {
        width: 200px;
      }

      /* 交替行背景色，增加可读性 */
      tbody tr:nth-child(even) {
        background-color: #f8f9fa;
      }

      /* 悬停行高亮 */
      tbody tr:hover {
        background-color: #e9ecef;
      }
    </style>
  
特别注意 表格应该运行上下和左右滑动
表格列宽应该固定, 第一列为 200px, 其他列为 30px
表格的列名应该运行换行显示
cell如果为 0 值, 则无需显示 0, 可以显示为空字符串
Current月份需要根据系统时间动态生成.


  YTD Mar Apr May Jun Jul Aug Sep Oct Nov Dec FY 25
Total Budget  $13.92M $3.07M  $3.66M  $5.02M  $5.30M  $6.31M  $6.76M  $6.14M  $5.61M  $5.33M  $6.02M  $67.13M
Open POs / AP outstanding                       
Approved buy - US                       
Approved buy - UK                       
Approved buy - NPI                        
Approved buy - Components                       
Approved buy - BAM    
                                       
在刚刚代码的基础上, 再生成一个上面格式的html表格字符串, 要求如下
1. 只修改Open POs / AP outstanding这一行的数据, 其他地方和数据不动. 添加的逻辑如下, 将刚刚最终结果的"Past Due - Total"列的数据全部累加,添加到YTD列; 将"Mar - Total"列全部累加,添加到Mar列; 将"Apr - Total"列... 依次类推. 
2. 样式要求: 能否为下面这些行的表格单元的内部设置成一个可输入框? 然后这些行的行名称设置成紫色背景. Approved buy - US,Approved buy - UK,Approved buy - NPI,Approved buy - Components,Approved buy - BAM.
另外, 帮我把Total Budget这一行的字体加粗. 帮我把Open POs / AP outstanding 表格单元数据转换成类似"$13.92M"的结构.

wowTracking.csv 原列名
Discount,Vendor Code,Vendor Name,Vendor,Payment Terms,Deposit Required,Prepay G,Prepay H,Net Days (Due post ERD)

现列名
Term Name,Deposit Required,Prepay % (Due <= ERD),Net Days (Due post ERD)

原对应关系是根据每个记录的"ID"